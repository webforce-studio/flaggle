/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/countries/route";
exports.ids = ["app/api/countries/route"];
exports.modules = {

/***/ "(rsc)/./app/api/countries/route.ts":
/*!************************************!*\
  !*** ./app/api/countries/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/api/server.js\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n// Helper function to generate kebab-case ID\nfunction generateKebabId(name) {\n    return name.toLowerCase().replace(/[^a-z0-9]+/g, \"-\").replace(/(^-|-$)/g, \"\");\n}\n// Persistent storage using file system\nlet currentCountries = [];\nlet isInitialized = false;\n// Helper function to load countries from the original database\nasync function loadInitialCountries() {\n    try {\n        const { countries } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_country-database_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/country-database */ \"(rsc)/./lib/country-database.ts\"));\n        console.log(`Loaded ${countries.length} countries from database file`);\n        return [\n            ...countries\n        ] // Create a copy to avoid modifying the original\n        ;\n    } catch (error) {\n        console.error(\"Error loading initial countries:\", error);\n        return [];\n    }\n}\n// Helper function to save countries back to the database file\nasync function saveCountriesToFile(countries) {\n    try {\n        const timestamp = new Date().toISOString();\n        // Generate the TypeScript file content\n        const fileContent = `// Complete country database with ${countries.length} countries\n// Last updated: ${timestamp}\n\nexport interface Country {\n  id: string\n  name: string\n  code: string\n  flagUrl: string\n  region: string\n  capital: string\n  population: number\n  coordinates: {\n    lat: number\n    lng: number\n  }\n}\n\nexport const countries: Country[] = ${JSON.stringify(countries, null, 2)}\n\n// Export additional utilities\nexport const COUNTRIES_DATABASE = countries\nexport default countries\n`;\n        const filePath = (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(process.cwd(), 'lib', 'country-database.ts');\n        await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.writeFile)(filePath, fileContent, 'utf8');\n        console.log(`✅ Successfully saved ${countries.length} countries to database file`);\n        return true;\n    } catch (error) {\n        console.error('❌ Error saving countries to file:', error);\n        return false;\n    }\n}\n// Initialize countries on startup\nasync function initializeCountries() {\n    if (!isInitialized) {\n        currentCountries = await loadInitialCountries();\n        isInitialized = true;\n        console.log(`Initialized with ${currentCountries.length} countries (FILE PERSISTENCE ENABLED)`);\n    }\n}\n// GET - Fetch all countries\nasync function GET() {\n    try {\n        await initializeCountries();\n        console.log(`Returning ${currentCountries.length} countries`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            countries: currentCountries,\n            storageType: \"file-persistent\",\n            message: \"Data is persisted to the country database file\"\n        });\n    } catch (error) {\n        console.error(\"Error fetching countries:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to fetch countries\"\n        }, {\n            status: 500\n        });\n    }\n}\n// POST - Add new country\nasync function POST(request) {\n    try {\n        const data = await request.json();\n        console.log(\"=== ADDING NEW COUNTRY (PERSISTENT) ===\");\n        console.log(\"Received data:\", JSON.stringify(data, null, 2));\n        // Initialize countries if needed\n        await initializeCountries();\n        console.log(\"Current countries count:\", currentCountries.length);\n        // Parse population\n        const population = data.population ? Number.parseInt(data.population) : 0;\n        const latitude = data.latitude ? Number.parseFloat(data.latitude) : 0;\n        const longitude = data.longitude ? Number.parseFloat(data.longitude) : 0;\n        // Create new country\n        const newCountry = {\n            id: generateKebabId(data.name || \"\"),\n            name: data.name || \"\",\n            code: data.code || \"\",\n            flagUrl: data.flagUrl || \"\",\n            region: data.region || \"\",\n            capital: data.capital || \"\",\n            population,\n            coordinates: {\n                lat: latitude,\n                lng: longitude\n            }\n        };\n        console.log(\"Created country:\", JSON.stringify(newCountry, null, 2));\n        // Add to current array\n        currentCountries.push(newCountry);\n        console.log(`Total countries after addition: ${currentCountries.length}`);\n        // Save to file system\n        const saved = await saveCountriesToFile(currentCountries);\n        if (!saved) {\n            // Rollback the addition if save failed\n            currentCountries.pop();\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Failed to save country to database file\"\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `Country \"${newCountry.name}\" added and saved permanently to database`,\n            country: newCountry,\n            totalCountries: currentCountries.length,\n            storageType: \"file-persistent\",\n            notice: \"Country has been permanently saved to the database file\"\n        });\n    } catch (error) {\n        console.error(\"=== ERROR ADDING COUNTRY ===\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: `Failed to add country: ${error instanceof Error ? error.message : String(error)}`\n        }, {\n            status: 500\n        });\n    }\n}\n// PUT - Update existing country\nasync function PUT(request) {\n    try {\n        const data = await request.json();\n        const { id, ...updateData } = data;\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Country ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`=== UPDATING COUNTRY ID: ${id} (PERSISTENT) ===`);\n        // Initialize countries if needed\n        await initializeCountries();\n        // Parse population and coordinates\n        const population = updateData.population ? Number.parseInt(updateData.population) : 0;\n        const latitude = updateData.latitude ? Number.parseFloat(updateData.latitude) : 0;\n        const longitude = updateData.longitude ? Number.parseFloat(updateData.longitude) : 0;\n        // Find country in current countries\n        const countryIndex = currentCountries.findIndex((c)=>c.id === id);\n        if (countryIndex === -1) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Country not found\"\n            }, {\n                status: 404\n            });\n        }\n        const existingCountry = currentCountries[countryIndex];\n        // Update country\n        const updatedCountry = {\n            ...existingCountry,\n            name: updateData.name || existingCountry.name,\n            code: updateData.code || existingCountry.code,\n            flagUrl: updateData.flagUrl || existingCountry.flagUrl,\n            region: updateData.region || existingCountry.region,\n            capital: updateData.capital || existingCountry.capital,\n            population,\n            coordinates: {\n                lat: latitude,\n                lng: longitude\n            }\n        };\n        // Update in memory\n        currentCountries[countryIndex] = updatedCountry;\n        // Save to file system\n        const saved = await saveCountriesToFile(currentCountries);\n        if (!saved) {\n            // Rollback the update if save failed\n            currentCountries[countryIndex] = existingCountry;\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Failed to save updated country to database file\"\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Country updated and saved permanently to database\",\n            country: updatedCountry,\n            storageType: \"file-persistent\",\n            notice: \"Country has been permanently saved to the database file\"\n        });\n    } catch (error) {\n        console.error(\"Error updating country:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to update country\"\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE - Remove country\nasync function DELETE(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const id = searchParams.get(\"id\");\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Country ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`=== DELETING COUNTRY ID: ${id} (PERSISTENT) ===`);\n        // Initialize countries if needed\n        await initializeCountries();\n        // Find country in current countries\n        const countryIndex = currentCountries.findIndex((c)=>c.id === id);\n        if (countryIndex === -1) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Country not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Keep a backup for rollback\n        const deletedCountry = currentCountries[countryIndex];\n        // Remove country from array\n        currentCountries.splice(countryIndex, 1);\n        // Save to file system\n        const saved = await saveCountriesToFile(currentCountries);\n        if (!saved) {\n            // Rollback the deletion if save failed\n            currentCountries.splice(countryIndex, 0, deletedCountry);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Failed to save changes to database file\"\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Country deleted and changes saved permanently to database\",\n            storageType: \"file-persistent\",\n            notice: \"Country has been permanently removed from the database file\"\n        });\n    } catch (error) {\n        console.error(\"Error deleting country:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to delete country\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/countries/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcountries%2Froute&page=%2Fapi%2Fcountries%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcountries%2Froute.ts&appDir=%2FUsers%2Fjordenvanderhoogt%2FDocuments%2FCursor%2FFlaggle%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjordenvanderhoogt%2FDocuments%2FCursor%2FFlaggle&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcountries%2Froute&page=%2Fapi%2Fcountries%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcountries%2Froute.ts&appDir=%2FUsers%2Fjordenvanderhoogt%2FDocuments%2FCursor%2FFlaggle%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjordenvanderhoogt%2FDocuments%2FCursor%2FFlaggle&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_jordenvanderhoogt_Documents_Cursor_Flaggle_app_api_countries_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/countries/route.ts */ \"(rsc)/./app/api/countries/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/countries/route\",\n        pathname: \"/api/countries\",\n        filename: \"route\",\n        bundlePath: \"app/api/countries/route\"\n    },\n    resolvedPagePath: \"/Users/jordenvanderhoogt/Documents/Cursor/Flaggle/app/api/countries/route.ts\",\n    nextConfigOutput,\n    userland: _Users_jordenvanderhoogt_Documents_Cursor_Flaggle_app_api_countries_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNS4yLjRfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZjb3VudHJpZXMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmNvdW50cmllcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmNvdW50cmllcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmpvcmRlbnZhbmRlcmhvb2d0JTJGRG9jdW1lbnRzJTJGQ3Vyc29yJTJGRmxhZ2dsZSUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZqb3JkZW52YW5kZXJob29ndCUyRkRvY3VtZW50cyUyRkN1cnNvciUyRkZsYWdnbGUmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQzRCO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvam9yZGVudmFuZGVyaG9vZ3QvRG9jdW1lbnRzL0N1cnNvci9GbGFnZ2xlL2FwcC9hcGkvY291bnRyaWVzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jb3VudHJpZXMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jb3VudHJpZXNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2NvdW50cmllcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9qb3JkZW52YW5kZXJob29ndC9Eb2N1bWVudHMvQ3Vyc29yL0ZsYWdnbGUvYXBwL2FwaS9jb3VudHJpZXMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcountries%2Froute&page=%2Fapi%2Fcountries%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcountries%2Froute.ts&appDir=%2FUsers%2Fjordenvanderhoogt%2FDocuments%2FCursor%2FFlaggle%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjordenvanderhoogt%2FDocuments%2FCursor%2FFlaggle&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*********************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*********************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0"], () => (__webpack_exec__("(rsc)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcountries%2Froute&page=%2Fapi%2Fcountries%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcountries%2Froute.ts&appDir=%2FUsers%2Fjordenvanderhoogt%2FDocuments%2FCursor%2FFlaggle%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjordenvanderhoogt%2FDocuments%2FCursor%2FFlaggle&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();